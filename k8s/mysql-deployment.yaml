apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  init-db.sql: |
    USE TourGuide;
    
    CREATE TABLE IF NOT EXISTS users (
        user_id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        phone_number VARCHAR(15),
        image_path VARCHAR(255),
        role VARCHAR(50) NOT NULL
    );
    
    CREATE TABLE IF NOT EXISTS tours (
        tour_id INT AUTO_INCREMENT PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        description TEXT,
        start VARCHAR(255) NOT NULL,
        end VARCHAR(255) NOT NULL,
        date VARCHAR(255) NOT NULL,
        price DECIMAL(10, 2) NOT NULL,
        guide_id INT,
        image_path VARCHAR(255),
        map_embed_code TEXT,
        category VARCHAR(100),
        FOREIGN KEY (guide_id) REFERENCES users(user_id)
    );
    
    CREATE TABLE IF NOT EXISTS activities (
        activity_id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        description TEXT,
        image_path VARCHAR(255)
    );
    
    CREATE TABLE IF NOT EXISTS activity_tour (
        activity_id INT,
        tour_id INT,
        PRIMARY KEY (activity_id, tour_id),
        FOREIGN KEY (activity_id) REFERENCES activities(activity_id),
        FOREIGN KEY (tour_id) REFERENCES tours(tour_id)
    );
    
    CREATE TABLE IF NOT EXISTS reservations (
        reservation_id INT AUTO_INCREMENT PRIMARY KEY,
        tour_id INT NOT NULL,
        user_id INT NOT NULL,
        reservation_date DATE NOT NULL,
        number_of_people INT NOT NULL,
        status VARCHAR(50) NOT NULL,
        FOREIGN KEY (tour_id) REFERENCES tours(tour_id),
        FOREIGN KEY (user_id) REFERENCES users(user_id)
    );
    
    CREATE TABLE IF NOT EXISTS reviews (
        review_id INT AUTO_INCREMENT PRIMARY KEY,
        tour_id INT NOT NULL,
        user_id INT NOT NULL,
        comment TEXT,
        rating INT NOT NULL,
        review_date DATE NOT NULL,
        FOREIGN KEY (tour_id) REFERENCES tours(tour_id),
        FOREIGN KEY (user_id) REFERENCES users(user_id)
    );
    
    CREATE TABLE IF NOT EXISTS password_reset_tokens (
        token_id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT NOT NULL,
        token VARCHAR(255) NOT NULL,
        created_at TIMESTAMP NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(user_id)
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "2003"
        - name: MYSQL_DATABASE
          value: "TourGuide"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-init
        configMap:
          name: mysql-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
  type: ClusterIP
